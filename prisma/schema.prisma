generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  INSTRUCTOR
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  role     UserRole @default(STUDENT)

  questions Question[]
  answers   Answer[]
  comment   Comment[]

  @@map("users")
}

model Question {
  id        String    @id @default(uuid())
  title     String
  slug      String    @unique
  content   String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  authorId     String  @map("author_id")
  bestAnswerId String? @unique @map("best_answer_id")

  author      User         @relation(fields: [authorId], references: [id])
  bestAnswer  Answer?      @relation("bestAnswer", fields: [bestAnswerId], references: [id])
  answers     Answer[]
  attachments Attachment[]
  comments    Comment[]

  @@map("questions")
}

model Attachment {
  id    String @id @default(uuid())
  title String
  url   String

  questionId String? @map("question_id")
  answerId   String?

  question Question? @relation(fields: [questionId], references: [id])
  answer   Answer?   @relation(fields: [answerId], references: [id])

  @@map("attachments")
}

model Answer {
  id        String    @id @default(uuid())
  content   String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  authorId   String @map("author_id")
  questionId String @map("question_id")

  author       User         @relation(fields: [authorId], references: [id])
  bestAnswerOn Question?    @relation("bestAnswer")
  comments     Comment[]
  question     Question     @relation(fields: [questionId], references: [id])
  attachments  Attachment[]

  @@map("answers")
}

model Comment {
  id         String    @id @default(uuid())
  content    String
  authorId   String    @map("author_id")
  questionId String?   @map("question_id")
  answerId   String?   @map("answer_id")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime? @updatedAt @map("updated_at")

  answer   Answer?   @relation(fields: [answerId], references: [id])
  author   User      @relation(fields: [authorId], references: [id])
  question Question? @relation(fields: [questionId], references: [id])

  @@map("comments")
}
